
default:
  image: python:3.11

build_executable_linux:
  stage: build
  script:
    # Install requirements for seabreeze, see https://python-seabreeze.readthedocs.io/en/latest/install.html
    - apt-get update
    - apt-get -y install build-essential libusb-dev
    - pip install --upgrade pip
    - pip install -r requirements.txt
    - pip install -U pyinstaller
    - pyinstaller --icon resources/rainbow.ico --onefile main.py --name spectra-compiler

  artifacts:
    paths:
      - build/
      - dist/

build_executable_windows:
  stage: build
  image: chocolatey/choco

  tags:
    - windows

  script:
    # Install Chocolatey
  #  - Get-ExecutionPolicy
    # - Set-ExecutionPolicy Bypass -Scope Process -Force  # not required, execution policy already is "bypass"
  #  - "[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))"
    # Update chocolatey
    - choco upgrade chocolatey
    - choco install python311 -y
    - dir c:\python311            # See if python installed correctly
    - dir c:\python311\scripts    # See if pip is available

    # Update the environment to recognize new commands
    - Import-Module $env:ChocolateyInstall\helpers\chocolateyProfile.psm1
    - refreshenv
    # Install requirements for seabreeze
  #  - choco install visualcpp-build-tools -y
  #  - choco install windows-sdk-10.1 -y
  #  - choco install windowsdriverkit10 -y
    # Updating pip
    - pip install --upgrade pip
    - pip install -r requirements.txt
    - pip install -U pyinstaller

    # Build the spec-file in separate step according to https://pyinstaller.org/en/stable/spec-files.html
    - pyi-makespec --icon resources/rainbow.ico --onefile --name spectra-compiler main.py
    - pyinstaller spectra-compiler.spec

  artifacts:
    when: on_failure
      paths:
        - spectra-compiler.spec
    paths:
      - build/
      - dist/